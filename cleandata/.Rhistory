override.aes = aes(label = "")
)
)
ggplot(filter(all_rankings, conference=="West"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(all_rankings, aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ff <- paste0(root, "/modeldetails/score_decomp_", stamp,".csv")
center <- function(x){return((x-median(x))/1)}
d <- read.csv(ff, stringsAsFactors = FALSE) %>%
select(selected_team, roster, circumstances, performance) %>%
inner_join(select(all_rankings, elastic_ranking, selected_team), by="selected_team") %>%
group_by(selected_team) %>%
summarise_each(funs(mean)) %>% ## get averages across games by team
mutate(order=elastic_ranking) %>%
arrange(order) %>%
ungroup() %>%
inner_join(select(all_rankings, conference, selected_team, division), by="selected_team") %>%
group_by(conference) %>%
mutate_each(funs(center), which(sapply(., is.numeric))) %>% ## standardize across teams
ungroup() %>%
mutate(roster_rank=round(100*(roster+abs(min(roster)))/(max(roster)+abs(min(roster))))) %>%
rename(team=selected_team)
dd <- gather(d, modelpart, value, roster:performance)
#ggplot(data=filter(dd, conference=="East"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(dd, conference=="West"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="East"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="West"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
## playoffs
ffff <- paste0(root, "/rankings/playoff_prediction_",stamp,".csv")
playoffs <- read.csv(ffff, stringsAsFactors = FALSE) %>%
mutate(d=1, seed=winner_seed,
matchup=paste0(winner, "=", round(100*prob_win_series), "% ", loser,"=", round(100*(1-prob_win_series))," %"),
round_text=case_when(round == 1 ~ "1. First Round",
round == 2 ~ "2. Conf Semifinals",
round == 3 ~ "3. Conf Finals",
round == 4 ~ "4. NBA Finals"))
ggplot(playoffs, aes(x=round_text, y=prob_win_series)) +
xlab("") + ylab("Certainty") +
geom_point(size = 2, color = 'black') +
#geom_smooth(method='lm') +
geom_label_repel(aes(round, prob_win_series, label = matchup, fill=factor(round_text)),
fontface = 'bold', color = 'black', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines")) +
theme(legend.title = element_blank()) + theme(legend.position="none") +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
#theme(axis.text.y=element_blank())
library(dplyr)
library(tidyr)
library(ggplot2)
root <- "/Users/kim.larsen/Documents/Code/NBA_RANKINGS"
stamp <- "2019-12-22"
coeff_details <- read.csv(paste0(root, "/modeldetails/coefficients_",stamp,".csv"), stringsAsFactors = FALSE) %>%
filter(as.Date(DATE)==max(as.Date(DATE))) %>%
mutate(Cluster=as.numeric(gsub("share_minutes_cluster_", "", Variable))) %>%
filter(!is.na(Cluster)) %>%
rename(archetype_strength=Coeff) %>%
select(Cluster, archetype_strength)
rosters <- read.csv(paste0(root, "/rawdata/rosters_",stamp,".csv"), stringsAsFactors = FALSE) %>%
select(PLAYER_FULL_NAME, Team)
injuries <- read.csv(paste0(root, "/rawdata/injuries_",stamp,".csv"), stringsAsFactors = FALSE)
cluster_details <- read.csv(paste0(root, "/modeldetails/cluster_details_",stamp,".csv"), stringsAsFactors = FALSE) %>%
arrange(PLAYER_FULL_NAME, DATE) %>%
group_by(PLAYER_FULL_NAME, Cluster) %>%
summarise(games_in_cluster=n()) %>%
filter(games_in_cluster==max(games_in_cluster)) %>%
inner_join(coeff_details, by="Cluster") %>%
inner_join(rosters, by="PLAYER_FULL_NAME") %>%
#filter(archetype_strength>0) %>%
arrange(archetype_strength, games_in_cluster) %>%
mutate(max=as.numeric((archetype_strength>1.15)),
super=as.numeric((archetype_strength>0.05 & max==0)),
power=(super+max==0), n=1) %>%
left_join(injuries, by="PLAYER_FULL_NAME") %>%
filter(is.na(injury_status)==TRUE | injury_status=="Day-To-Day" | as.Date(stamp)<return_date<as.Date("2020-03-01")) %>%
group_by(Team)
mean(filter(cluster_details, max==1)$archetype_strength)
mean(filter(cluster_details, super==1)$archetype_strength)
mean(filter(cluster_details, power==1)$archetype_strength)
t <- select(cluster_details, Team, max, super, power, archetype_strength) %>%
mutate(d=as.numeric(archetype_strength>0.05)) %>%
summarise(max=sum(max), super=sum(super), power=sum(power), var=n_distinct(archetype_strength*d)) %>%
mutate(order=7*max+super) %>%
arrange(order) %>%
ungroup() %>%
gather(cluster, players, max:power) %>%
mutate(Cluster=ifelse(cluster=="max", " Max", ifelse(cluster=="super", " Super", " 3. power"))) %>%
mutate(players2=ifelse(cluster=="power", -players, ifelse(cluster=="max", 1*players, players))) %>%
filter(Cluster != " 3. power")
ggplot(data=t,
aes(x=reorder(Team, order), players2)) +
geom_bar(aes(fill=Cluster), stat="identity") + coord_flip() +
ylab("# of Players") + xlab("") + theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::number_format(accuracy = 1.0))
tt <- filter(cluster_details, archetype_strength>0.8) %>%
mutate(cluster=ifelse(archetype_strength>1.15, "Max", "Super"))
nrow(tt)
nrow(cluster_details)
ggplot(data=tt,
aes(x=reorder(PLAYER_FULL_NAME, archetype_strength), archetype_strength)) +
coord_flip() +
geom_bar(aes(fill=factor(cluster)), stat="identity", size=2) +
ylab("Strength") + xlab("") + theme(legend.title = element_blank()) +
theme(axis.text.x=element_blank())
library(dplyr)
library(ggrepel)
library(tidyr)
stamp <- "2019-12-19"
root <- "/Users/kim.larsen/Documents/Code/NBA_RANKINGS"
f <- paste0(root, "/rankings/rankings_", stamp,".csv")
all_rankings <- read.csv(f, stringsAsFactors = FALSE) %>%
group_by(conference) %>%
mutate(elastic_ranking=min_rank(-season_win_rate),
FiveThirtyEight=min_rank(-pred_win_rate_538),
absdiff=ifelse(abs(elastic_ranking-FiveThirtyEight)>0, 0, 1),
diff=case_when(elastic_ranking>FiveThirtyEight ~ "Elastic < 538",
elastic_ranking<FiveThirtyEight ~ "Elastic > 538",
elastic_ranking==FiveThirtyEight ~ "Elastic == 538")) %>%
select(team, conference, division, elastic_ranking, FiveThirtyEight, absdiff, season_win_rate, diff) %>%
mutate(selected_team=team) %>%
arrange(conference, elastic_ranking) %>%
mutate(miss=ifelse(elastic_ranking<9, "Make Playoffs", "Miss Playoffs")) %>%
ungroup(conference)
ggplot(data=filter(all_rankings, conference=="East"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=filter(all_rankings, conference=="West"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=all_rankings, aes(x=reorder(team, season_win_rate), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") +
#theme(legend.position = 'none') +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(filter(all_rankings, conference=="East"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(filter(all_rankings, conference=="West"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(all_rankings, aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ff <- paste0(root, "/modeldetails/score_decomp_", stamp,".csv")
center <- function(x){return((x-median(x))/1)}
d <- read.csv(ff, stringsAsFactors = FALSE) %>%
select(selected_team, roster, circumstances, performance) %>%
inner_join(select(all_rankings, elastic_ranking, selected_team), by="selected_team") %>%
group_by(selected_team) %>%
summarise_each(funs(mean)) %>% ## get averages across games by team
mutate(order=elastic_ranking) %>%
arrange(order) %>%
ungroup() %>%
inner_join(select(all_rankings, conference, selected_team, division), by="selected_team") %>%
group_by(conference) %>%
mutate_each(funs(center), which(sapply(., is.numeric))) %>% ## standardize across teams
ungroup() %>%
mutate(roster_rank=round(100*(roster+abs(min(roster)))/(max(roster)+abs(min(roster))))) %>%
rename(team=selected_team)
dd <- gather(d, modelpart, value, roster:performance)
#ggplot(data=filter(dd, conference=="East"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(dd, conference=="West"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="East"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="West"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
## playoffs
ffff <- paste0(root, "/rankings/playoff_prediction_",stamp,".csv")
playoffs <- read.csv(ffff, stringsAsFactors = FALSE) %>%
mutate(d=1, seed=winner_seed,
matchup=paste0(winner, "=", round(100*prob_win_series), "% ", loser,"=", round(100*(1-prob_win_series))," %"),
round_text=case_when(round == 1 ~ "1. First Round",
round == 2 ~ "2. Conf Semifinals",
round == 3 ~ "3. Conf Finals",
round == 4 ~ "4. NBA Finals"))
ggplot(playoffs, aes(x=round_text, y=prob_win_series)) +
xlab("") + ylab("Certainty") +
geom_point(size = 2, color = 'black') +
#geom_smooth(method='lm') +
geom_label_repel(aes(round, prob_win_series, label = matchup, fill=factor(round_text)),
fontface = 'bold', color = 'black', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines")) +
theme(legend.title = element_blank()) + theme(legend.position="none") +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
#theme(axis.text.y=element_blank())
library(dplyr)
library(ggrepel)
library(tidyr)
stamp <- "2019-12-20"
root <- "/Users/kim.larsen/Documents/Code/NBA_RANKINGS"
f <- paste0(root, "/rankings/rankings_", stamp,".csv")
all_rankings <- read.csv(f, stringsAsFactors = FALSE) %>%
group_by(conference) %>%
mutate(elastic_ranking=min_rank(-season_win_rate),
FiveThirtyEight=min_rank(-pred_win_rate_538),
absdiff=ifelse(abs(elastic_ranking-FiveThirtyEight)>0, 0, 1),
diff=case_when(elastic_ranking>FiveThirtyEight ~ "Elastic < 538",
elastic_ranking<FiveThirtyEight ~ "Elastic > 538",
elastic_ranking==FiveThirtyEight ~ "Elastic == 538")) %>%
select(team, conference, division, elastic_ranking, FiveThirtyEight, absdiff, season_win_rate, diff) %>%
mutate(selected_team=team) %>%
arrange(conference, elastic_ranking) %>%
mutate(miss=ifelse(elastic_ranking<9, "Make Playoffs", "Miss Playoffs")) %>%
ungroup(conference)
ggplot(data=filter(all_rankings, conference=="East"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=filter(all_rankings, conference=="West"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=all_rankings, aes(x=reorder(team, season_win_rate), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") +
#theme(legend.position = 'none') +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(filter(all_rankings, conference=="East"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(filter(all_rankings, conference=="West"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(all_rankings, aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ff <- paste0(root, "/modeldetails/score_decomp_", stamp,".csv")
center <- function(x){return((x-median(x))/1)}
d <- read.csv(ff, stringsAsFactors = FALSE) %>%
select(selected_team, roster, circumstances, performance) %>%
inner_join(select(all_rankings, elastic_ranking, selected_team), by="selected_team") %>%
group_by(selected_team) %>%
summarise_each(funs(mean)) %>% ## get averages across games by team
mutate(order=elastic_ranking) %>%
arrange(order) %>%
ungroup() %>%
inner_join(select(all_rankings, conference, selected_team, division), by="selected_team") %>%
group_by(conference) %>%
mutate_each(funs(center), which(sapply(., is.numeric))) %>% ## standardize across teams
ungroup() %>%
mutate(roster_rank=round(100*(roster+abs(min(roster)))/(max(roster)+abs(min(roster))))) %>%
rename(team=selected_team)
dd <- gather(d, modelpart, value, roster:performance)
#ggplot(data=filter(dd, conference=="East"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(dd, conference=="West"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="East"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="West"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
## playoffs
ffff <- paste0(root, "/rankings/playoff_prediction_",stamp,".csv")
playoffs <- read.csv(ffff, stringsAsFactors = FALSE) %>%
mutate(d=1, seed=winner_seed,
matchup=paste0(winner, "=", round(100*prob_win_series), "% ", loser,"=", round(100*(1-prob_win_series))," %"),
round_text=case_when(round == 1 ~ "1. First Round",
round == 2 ~ "2. Conf Semifinals",
round == 3 ~ "3. Conf Finals",
round == 4 ~ "4. NBA Finals"))
ggplot(playoffs, aes(x=round_text, y=prob_win_series)) +
xlab("") + ylab("Certainty") +
geom_point(size = 2, color = 'black') +
#geom_smooth(method='lm') +
geom_label_repel(aes(round, prob_win_series, label = matchup, fill=factor(round_text)),
fontface = 'bold', color = 'black', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines")) +
theme(legend.title = element_blank()) + theme(legend.position="none") +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
#theme(axis.text.y=element_blank())
View(all_rankings)
library(dplyr)
library(ggrepel)
library(tidyr)
stamp <- "2019-12-22"
root <- "/Users/kim.larsen/Documents/Code/NBA_RANKINGS"
f <- paste0(root, "/rankings/rankings_", stamp,".csv")
all_rankings <- read.csv(f, stringsAsFactors = FALSE) %>%
group_by(conference) %>%
mutate(elastic_ranking=min_rank(-season_win_rate),
FiveThirtyEight=min_rank(-pred_win_rate_538),
absdiff=ifelse(abs(elastic_ranking-FiveThirtyEight)>0, 0, 1),
diff=case_when(elastic_ranking>FiveThirtyEight ~ "Elastic < 538",
elastic_ranking<FiveThirtyEight ~ "Elastic > 538",
elastic_ranking==FiveThirtyEight ~ "Elastic == 538")) %>%
select(team, conference, division, elastic_ranking, FiveThirtyEight, absdiff, season_win_rate, diff) %>%
mutate(selected_team=team) %>%
arrange(conference, elastic_ranking) %>%
mutate(miss=ifelse(elastic_ranking<9, "Make Playoffs", "Miss Playoffs")) %>%
ungroup(conference)
ggplot(data=filter(all_rankings, conference=="East"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=filter(all_rankings, conference=="West"), aes(x=reorder(team, -elastic_ranking), season_win_rate, fill=factor(miss))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") + theme(legend.position = 'none') +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(data=all_rankings, aes(x=reorder(team, season_win_rate), season_win_rate, fill=factor(conference))) +
geom_bar(stat="identity") + coord_flip() +
xlab("") + ylab("") +
#theme(legend.position = 'none') +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
ggplot(filter(all_rankings, conference=="East"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(filter(all_rankings, conference=="West"), aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
#theme(legend.position="none") +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ggplot(all_rankings, aes(x=elastic_ranking, y=FiveThirtyEight)) +
xlab("Elastic Ranking") + ylab("FiveThirtyEight") +
geom_point(size = 2, color = 'black') +
geom_smooth(method='lm') +
geom_label_repel(aes(elastic_ranking, FiveThirtyEight, label = team, fill=factor(diff)),
fontface = 'bold', color = 'white', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines"))+
theme(legend.title = element_blank()) +
scale_y_reverse(limits=c(15,1), breaks=seq(1,15)) + scale_x_reverse(limits=c(15,1), breaks=seq(1,15)) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
)
ff <- paste0(root, "/modeldetails/score_decomp_", stamp,".csv")
center <- function(x){return((x-median(x))/1)}
d <- read.csv(ff, stringsAsFactors = FALSE) %>%
select(selected_team, roster, circumstances, performance) %>%
inner_join(select(all_rankings, elastic_ranking, selected_team), by="selected_team") %>%
group_by(selected_team) %>%
summarise_each(funs(mean)) %>% ## get averages across games by team
mutate(order=elastic_ranking) %>%
arrange(order) %>%
ungroup() %>%
inner_join(select(all_rankings, conference, selected_team, division), by="selected_team") %>%
group_by(conference) %>%
mutate_each(funs(center), which(sapply(., is.numeric))) %>% ## standardize across teams
ungroup() %>%
mutate(roster_rank=round(100*(roster+abs(min(roster)))/(max(roster)+abs(min(roster))))) %>%
rename(team=selected_team)
dd <- gather(d, modelpart, value, roster:performance)
#ggplot(data=filter(dd, conference=="East"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(dd, conference=="West"), aes(x=reorder(team, order), value)) + geom_bar(aes(fill=modelpart), stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="East"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
#ggplot(data=filter(d, conference=="West"), aes(x=reorder(team, roster_rank), roster_rank)) + geom_bar(stat="identity") + coord_flip() +
#  xlab("") + ylab("") + theme(legend.title = element_blank())
## playoffs
ffff <- paste0(root, "/rankings/playoff_prediction_",stamp,".csv")
playoffs <- read.csv(ffff, stringsAsFactors = FALSE) %>%
mutate(d=1, seed=winner_seed,
matchup=paste0(winner, "=", round(100*prob_win_series), "% ", loser,"=", round(100*(1-prob_win_series))," %"),
round_text=case_when(round == 1 ~ "1. First Round",
round == 2 ~ "2. Conf Semifinals",
round == 3 ~ "3. Conf Finals",
round == 4 ~ "4. NBA Finals"))
ggplot(playoffs, aes(x=round_text, y=prob_win_series)) +
xlab("") + ylab("Certainty") +
geom_point(size = 2, color = 'black') +
#geom_smooth(method='lm') +
geom_label_repel(aes(round, prob_win_series, label = matchup, fill=factor(round_text)),
fontface = 'bold', color = 'black', size=2,
box.padding = unit(0.35, "lines"),
point.padding = unit(0.5, "lines")) +
theme(legend.title = element_blank()) + theme(legend.position="none") +
scale_y_continuous(labels = scales::percent_format(accuracy=1))
#theme(axis.text.y=element_blank())
