dplyr::select(p, Date, TotalSignups, LL, UL, forecast))
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast_linear.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(trend),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(max(df$trend) + seq_along(1:horizon)),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=trend*as.numeric(Date>as.Date("2017-02-01")))
model <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=df)
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(max(df$trend) + seq_along(1:horizon)),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
### Predict
Date <- future$Date
p <-cbind(data.frame(predict(model, newdata = future, interval = "prediction", level=0.80)), Date) %>%
mutate(TotalSignups=10^fit, LL=10^lwr, UL=10^upr, forecast=1)
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL, forecast),
dplyr::select(p, Date, TotalSignups, LL, UL, forecast))
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast_linear.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=trend*as.numeric(Date>as.Date("2017-02-01")))
model <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=df)
summary(model)
min(subset(df, trend>0)$trend)
max(df$trend)
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=ifelse(Date>as.Date("2017-02-01"), trend-153, 0))
model <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=df)
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(max(df$trend) + seq_along(1:horizon)),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
### Predict
Date <- future$Date
p <-cbind(data.frame(predict(model, newdata = future, interval = "prediction", level=0.80)), Date) %>%
mutate(TotalSignups=10^fit, LL=10^lwr, UL=10^upr, forecast=1)
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL, forecast),
dplyr::select(p, Date, TotalSignups, LL, UL, forecast))
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast_linear.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=ifelse(Date>as.Date("2017-02-01"), trend, 153))
df$trend
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=ifelse(Date>as.Date("2017-02-01"), trend, 153))
model <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=df)
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(max(df$trend) + seq_along(1:horizon)),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
### Predict
Date <- future$Date
p <-cbind(data.frame(predict(model, newdata = future, interval = "prediction", level=0.80)), Date) %>%
mutate(TotalSignups=10^fit, LL=10^lwr, UL=10^upr, forecast=1)
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL, forecast),
dplyr::select(p, Date, TotalSignups, LL, UL, forecast))
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast_linear.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
summary(model)
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-7),
trend=row_number(),
lntrend=log10(row_number()),
trend=ifelse(Date>as.Date("2017-02-01"), trend, 153))
model <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=df)
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
trend=max(df$trend) + seq_along(1:horizon),
lntrend=log10(max(df$trend) + seq_along(1:horizon)),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)),
s6=as.numeric(rep(0,horizon)),
s7=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"),
sun=as.numeric(weekdays(Date)=="Sunday"))
### Predict
Date <- future$Date
p <-cbind(data.frame(predict(model, newdata = future, interval = "prediction", level=0.80)), Date) %>%
mutate(TotalSignups=10^fit, LL=10^lwr, UL=10^upr, forecast=1)
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL, forecast),
dplyr::select(p, Date, TotalSignups, LL, UL, forecast))
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast_linear.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v$fit,
Date=subset(df, holdout==1)$Date)
m <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=subset(df, holdout==0))
v <- predict(n, newdata=subset(df, holdout==1))
m <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=subset(df, holdout==0))
v <- predict(m, newdata=subset(df, holdout==1))
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v$fit,
Date=subset(df, holdout==1)$Date)
v <- predict(m, newdata=subset(df, holdout==1))
m <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6 + s7, data=subset(df, holdout==0))
v <- predict(m, newdata=subset(df, holdout==1))
subset(df, holdout==1)
summary(m)
m <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6, data=subset(df, holdout==0))
v <- predict(m, newdata=subset(df, holdout==1))
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v$fit,
Date=subset(df, holdout==1)$Date)
v
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v,
Date=subset(df, holdout==1)$Date)
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v,
Date=subset(df, holdout==1)$Date,
APE=abs(10^v-TotalSignups)/TotalSignups)
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v,
Date=subset(df, holdout==1)$Date) %>%
mutate(APE=abs(Fitted-TotalSignups)/TotalSignups)
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v,
Date=subset(df, holdout==1)$Date) %>%
mutate(APE=abs(Fitted-Actual)/Actual)
ggplot(aes(x=Date), data=extended) +
geom_line(aes(y=Fitted, colour="Forecast")) +
geom_line(aes(y=TotalSignups, colour="Actual")) +
ggtitle(paste0("MAPE= ", round(100*mean(validation$APE), 2), "%, TAPE= ", round(100*abs(sum(validation$f)/sum(validation$TotalSignups)-1), 2), "%"))
ggplot(aes(x=Date), data=validation) +
geom_line(aes(y=Fitted, colour="Forecast")) +
geom_line(aes(y=TotalSignups, colour="Actual")) +
ggtitle(paste0("MAPE= ", round(100*mean(validation$APE), 2), "%, TAPE= ", round(100*abs(sum(validation$f)/sum(validation$TotalSignups)-1), 2), "%"))
ggplot(aes(x=Date), data=validation) +
geom_line(aes(y=Fitted, colour="Forecast")) +
geom_line(aes(y=Actual, colour="Actual")) +
ggtitle(paste0("MAPE= ", round(100*mean(validation$APE), 2), "%, TAPE= ", round(100*abs(sum(validation$f)/sum(validation$TotalSignups)-1), 2), "%"))
library(tidyverse)
library(bsts)
library(reshape2)
lagp <- function(x, p){
return(c(rep(0,p), x[1:(length(x)-p)]))
}
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups))
df <- arrange(df, cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
sun=as.numeric(weekdays(cohort_date)=="Sunday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
s6=as.numeric(cohort_date==as.Date("2017-03-17")),
s7=as.numeric(cohort_date==as.Date("2017-03-18")),
lag_TotalSignups=lagp(TotalSignups, 7),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log10(TotalSignups),
forecast=0) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-25") & Date>as.Date('2016-09-01')) %>%
#filter(Date<max(Date) & Date>max(Date)-91) %>%
mutate(holdout=as.numeric(Date>max(Date)-6),
trend=row_number(),
lntrend=log10(row_number()),
trend=ifelse(Date>as.Date("2017-02-01"), trend, 153))
### Validate
m <- lm(lnTotalSignups ~ trend + tue + wed + thu + fri + sat + sun + s2 + s6, data=subset(df, holdout==0))
v <- predict(m, newdata=subset(df, holdout==1))
validation<- data.frame(Actual=subset(df, holdout==1)$TotalSignups,
Fitted=10^v,
Date=subset(df, holdout==1)$Date) %>%
mutate(APE=abs(Fitted-Actual)/Actual)
ggplot(aes(x=Date), data=validation) +
geom_line(aes(y=Fitted, colour="Forecast")) +
geom_line(aes(y=Actual, colour="Actual")) +
ggtitle(paste0("MAPE= ", round(100*mean(validation$APE), 2), "%, TAPE= ", round(100*abs(sum(validation$Fitted)/sum(validation$Actual)-1), 2), "%"))
##### Run the playoffs
## Need to run the season first using run_model.R
source("/Users/kim.larsen/Documents/Code/NBA_RANKINGS/functions/sim_playoffs.R")
inwindow <- filter(box_scores_plus, DATE_INDEX<=max_real_date & DATE_INDEX>max_real_date-playing_time_window+1)
thisseason <- filter(inwindow, DATE==max(DATE))[1,"season"]
win_perc1 <- winpercentages(inwindow, thisseason, w)
win_perc2 <- win_perc1
inwindow_active <- mutate(inwindow,
today=as.Date(end_date),
injured=ifelse(is.na(injury_status), 0, ifelse(today>=injury_scrape_date & today<return_date, 1, 0))
)
injured_players <- unique(subset(inwindow_active, injured==1)$PLAYER_FULL_NAME)
if (length(injured_players)>0){
print(paste0("Injuries: ", injured_players))
inwindow_active <- filter(inwindow_active, injured==0)
}
end_date
ncore <- detectCores()-1
registerDoParallel(ncore)
loop_result <- foreach(p=1:10) %dopar% {
playoffs <- sim_playoff(results[[2]], inwindow_active, playing_time_window, win_perc1, win_perc2, datemap, 1, "/Users/kim.larsen/Documents/Code/NBA_RANKINGS", c, max_real_date, thisseason, end_date)
winner <- subset(playoffs[[1]], status=="W")$team
return(data.frame(p, winner))
}
