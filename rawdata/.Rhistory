ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
future <- data.frame(
Date=c(as.Date("2017-03-13"), as.Date("2017-03-20")),
MediaSpend=c(1600000,1600000),
#MediaSpend=c(2949198,2949198),
s1=c(0,0),
s2=c(0,0),
s3=c(0,0),
s4=c(0,0),
s5=c(0,0))
future$lnMediaSpend <- log(as.numeric(future$MediaSpend)+1)
### Predict
#p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.15, 0.85))
posterior.interval <- data.frame(
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])),
LastActual=as.numeric(rep(exp(df[nrow(df), "lnTotalSignups"]), 2)),
Date=c(as.Date("2017-03-13"), as.Date("2017-03-20"))) %>%
mutate(ULBandActual=UL/LastActual-1,
LLBandActual=LL/LastActual-1,
BandForecast=UL/F-1,
DropDueToMarketing=(F-LastActual)/LastActual)
View(posterior.interval)
write.csv(df, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/total_daily_signups.csv")
library(tidyverse)
library(bsts)
library(reshape2)
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups)) %>%
arrange(cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01"))) %>%
rename(Date=cohort_date)
write.csv(df, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/total_daily_signups.csv")
library(tidyverse)
library(bsts)
library(reshape2)
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups)) %>%
arrange(cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
lnTotalSignups=log(TotalSignups)) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-23"))
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 10000,
ping=0, seed=2016, data=df)
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 10000,
ping=0, seed=2016, data=df)
### Get a suggested number of burn-ins
burn <- SuggestBurn(0.1, bsts.model)
### Get the components
components.withreg <- data.frame(
Trend=colMeans(bsts.model$state.contributions[-(1:burn),"trend",]),
Regression=colMeans(bsts.model$state.contributions[-(1:burn),"regression",]),
Actuals=df$TotalSignups,
Date=df$Date)
names(components.withreg) <- c("Trend", "Regression", "Actuals", "Date")
components.withreg <- melt(components.withreg, id.vars="Date")
names(components.withreg) <- c("Date", "Component", "Value")
ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
p <- predict.bsts(bsts.model, horizon=14, burn=burn, quantiles = c(0.10, 0.90))
seq_along(3, 5)
seq_along(3)
seq_along(1:3)
future <- data.frame(
Date=max(df$Date) + seq_along(1:28),
s1=as.numeric(rep(0,28)),
s2=as.numeric(rep(0,28)),
s3=as.numeric(rep(0,28)))
View(future)
future <- data.frame(
Date=max(df$Date) + seq_along(1:28),
s1=as.numeric(rep(0,28)),
s2=as.numeric(rep(0,28)),
s3=as.numeric(rep(0,28)))  %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"))
future <- data.frame(
Date=max(df$Date) + seq_along(1:28),
s1=as.numeric(rep(0,28)),
s2=as.numeric(rep(0,28)),
s3=as.numeric(rep(0,28)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"))
View(future)
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
posterior.interval <- data.frame(
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])),
LastActual=as.numeric(rep(exp(df[nrow(df), "lnTotalSignups"]), 2)),
Date=c(as.Date("2017-03-13"), as.Date("2017-03-20"))) %>%
mutate(ULBandActual=UL/LastActual-1,
LLBandActual=LL/LastActual-1,
BandForecast=UL/F-1,
DropDueToMarketing=(F-LastActual)/LastActual)
View(posterior.interval)
posterior.interval <- data.frame(
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,]))
posterior.interval <- data.frame(
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
posterior.interval <- data.frame(
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
View(posterior.interval)
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
View(posterior.interval)
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
F=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
library(tidyverse)
library(bsts)
library(reshape2)
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups)) %>%
arrange(cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log(TotalSignups)) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-23"))
write.csv(df, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/total_daily_signups.csv")
ggplot(data=df, aes(x=Date, y=TotalSignups)) + geom_line()
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 1000,
ping=0, seed=2016, data=df)
### Get a suggested number of burn-ins
burn <- SuggestBurn(0.1, bsts.model)
### Get the components
components.withreg <- data.frame(
Trend=colMeans(bsts.model$state.contributions[-(1:burn),"trend",]),
Regression=colMeans(bsts.model$state.contributions[-(1:burn),"regression",]),
Actuals=df$TotalSignups,
Date=df$Date)
names(components.withreg) <- c("Trend", "Regression", "Actuals", "Date")
components.withreg <- melt(components.withreg, id.vars="Date")
names(components.withreg) <- c("Date", "Component", "Value")
ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4 + s5 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 1000,
ping=0, seed=2016, data=df)
### Get a suggested number of burn-ins
burn <- SuggestBurn(0.1, bsts.model)
### Get the components
components.withreg <- data.frame(
Trend=colMeans(bsts.model$state.contributions[-(1:burn),"trend",]),
Regression=colMeans(bsts.model$state.contributions[-(1:burn),"regression",]),
Actuals=df$TotalSignups,
Date=df$Date)
names(components.withreg) <- c("Trend", "Regression", "Actuals", "Date")
components.withreg <- melt(components.withreg, id.vars="Date")
names(components.withreg) <- c("Date", "Component", "Value")
ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"))
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
TotalSignups=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
extended <- bind_rows(select(df, Date, TotalSignups, LL, UL), select(posterior.interval, Date, TotalSignups, LL, UL))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL))
View(extended)
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
TotalSignups=exp(p$median),
UL=exp(as.numeric(p$interval[2,])))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
write.csv(df, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast.csv")
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast.csv")
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4 + s5 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 10000,
ping=0, seed=2016, data=df)
### Get a suggested number of burn-ins
burn <- SuggestBurn(0.1, bsts.model)
### Get the components
components.withreg <- data.frame(
Trend=colMeans(bsts.model$state.contributions[-(1:burn),"trend",]),
Regression=colMeans(bsts.model$state.contributions[-(1:burn),"regression",]),
Actuals=df$TotalSignups,
Date=df$Date)
names(components.withreg) <- c("Trend", "Regression", "Actuals", "Date")
components.withreg <- melt(components.withreg, id.vars="Date")
names(components.withreg) <- c("Date", "Component", "Value")
ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"))
### Predict
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
TotalSignups=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
?bsts
?AddLocalLinearTrend
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=Actual, colour = "TotalSignups"), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
library(tidyverse)
library(bsts)
library(reshape2)
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups)) %>%
arrange(cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
LL=TotalSignups, UL=TotalSignups,
lnTotalSignups=log(TotalSignups)) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-23"))
write.csv(df, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/total_daily_signups.csv")
ggplot(data=df, aes(x=Date, y=TotalSignups)) + geom_line()
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4 + s5 + mon + tue + wed + thu + fri + sat, state.specification = ss, niter = 10000,
ping=0, seed=2016, data=df)
### Get a suggested number of burn-ins
burn <- SuggestBurn(0.1, bsts.model)
### Get the components
components.withreg <- data.frame(
Trend=colMeans(bsts.model$state.contributions[-(1:burn),"trend",]),
Regression=colMeans(bsts.model$state.contributions[-(1:burn),"regression",]),
Actuals=df$TotalSignups,
Date=df$Date)
names(components.withreg) <- c("Trend", "Regression", "Actuals", "Date")
components.withreg <- melt(components.withreg, id.vars="Date")
names(components.withreg) <- c("Date", "Component", "Value")
ggplot(data=components.withreg, aes(x=Date, y=Value)) + geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
facet_grid(Component ~ ., scales="free") + guides(colour=FALSE) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
horizon <- 28
future <- data.frame(
Date=max(df$Date) + seq_along(1:horizon),
s1=as.numeric(rep(0,horizon)),
s2=as.numeric(rep(0,horizon)),
s3=as.numeric(rep(0,horizon)),
s4=as.numeric(rep(0,horizon)),
s5=as.numeric(rep(0,horizon)))  %>%
mutate(mon=as.numeric(weekdays(Date)=="Monday"),
tue=as.numeric(weekdays(Date)=="Tuesday"),
wed=as.numeric(weekdays(Date)=="Wednesday"),
thu=as.numeric(weekdays(Date)=="Thursday"),
fri=as.numeric(weekdays(Date)=="Friday"),
sat=as.numeric(weekdays(Date)=="Saturday"))
### Predict
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.10, 0.90))
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
TotalSignups=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast.csv")
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=Actual, colour = "TotalSignups"), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=TotalSignups, colour = "TotalSignups"), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=TotalSignups), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
df <- read_csv("/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/rider_daily_signups_2015_onward.csv") %>%
group_by(cohort_date) %>%
summarise(TotalSignups=sum(signups)) %>%
arrange(cohort_date) %>%
mutate(mon=as.numeric(weekdays(cohort_date)=="Monday"),
tue=as.numeric(weekdays(cohort_date)=="Tuesday"),
wed=as.numeric(weekdays(cohort_date)=="Wednesday"),
thu=as.numeric(weekdays(cohort_date)=="Thursday"),
fri=as.numeric(weekdays(cohort_date)=="Friday"),
sat=as.numeric(weekdays(cohort_date)=="Saturday"),
s1=as.numeric(cohort_date==as.Date("2016-01-01")),
s2=as.numeric(cohort_date==as.Date("2017-01-01")),
s3=as.numeric(cohort_date==as.Date("2015-01-01")),
s4=as.numeric(cohort_date==as.Date("2015-11-01")),
s5=as.numeric(cohort_date==as.Date("2015-05-13")),
LL=NA, UL=NA,
lnTotalSignups=log(TotalSignups)) %>%
rename(Date=cohort_date) %>%
filter(Date<as.Date("2017-03-23"))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=TotalSignups), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date)) +
geom_line(aes(y=TotalSignups), size=1.2) +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
#geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
#geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line() +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL)) %>%
filter(Date>as.Date("2016-12-31"))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL)) %>%
filter(Date>as.Date("2017-01-01"))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
p <- predict.bsts(bsts.model, newdata = future, burn=burn, quantiles = c(0.15, 0.85))
posterior.interval <- data.frame(
Date=future$Date,
LL=exp(as.numeric(p$interval[1,])),
TotalSignups=exp(p$mean),
UL=exp(as.numeric(p$interval[2,])))
extended <- bind_rows(dplyr::select(df, Date, TotalSignups, LL, UL), dplyr::select(posterior.interval, Date, TotalSignups, LL, UL)) %>%
filter(Date>as.Date("2017-01-01"))
ggplot(data=extended, aes(x=Date, y=TotalSignups)) + geom_line()
write.csv(extended, "/Users/kim.larsen/Documents/Projects/2017-03-22 Rider Fraud Spend Test/forecast.csv")
ggplot(data=extended, aes(x=Date, y=TotalSignups)) +
geom_line(color="black") +
theme_bw() + theme(legend.title = element_blank()) + ylab("") + xlab("") +
geom_vline(xintercept=as.numeric(max(df$Date)), linetype=2) +
geom_ribbon(aes(ymin=LL, ymax=UL), fill="grey", alpha=0.5) +
theme(axis.text.x=element_text(angle = -90, hjust = 0))
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups, level.sigma.prior = 0.1)
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4, state.specification = ss, niter = 1000,
ping=0, seed=2016, data=df)
ss <- AddLocalLinearTrend(list(), df$lnTotalSignups, list(level.sigma.prior = 0.1))
bsts.model <- bsts(lnTotalSignups ~ s1 + s2 + s3 + s4, state.specification = ss, niter = 1000,
ping=0, seed=2016, data=df)
library(xlsx)
library(dplyr)
library(readxl)
library(stringi)
library(tidyr)
library(reshape2)
library(data.table)
library(dplyr)
library(ggmap)
library(parallel)
library(foreach)
library(doParallel)
library(rvest)
library(stringr)
install.packages("Xlsx")
install.packages("xlsx")
install.packages("reshape2")
install.packages("ggmap")
install.packages("parallel")
install.packages("foreach")
install.packages("stringr")
library(xlsx)
library(dplyr)
library(readxl)
library(stringi)
library(tidyr)
library(reshape2)
library(data.table)
library(dplyr)
library(ggmap)
library(parallel)
library(foreach)
library(doParallel)
library(rvest)
library(stringr)
source("/Users/kim.larsen/Documents/Code/NBA_RANKINGS/functions/distance_between.R")
setwd("/Users/kim.larsen/Documents/Code/NBA_RANKINGS/rawdata/")
team_map <- data.frame(read_excel("schedule.xlsx", sheet=2)) %>%
distinct(Team, .keep_all=TRUE) %>% select(City, NBAstuffer.Initials, Team) %>%
filter(!(Team %in% c("Charlotte Bobcats", "New Orleans Hornets")))
