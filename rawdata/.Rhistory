replace(is.na(.), 0) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup*dm_last_touch),
ff=sum(shipment_request*dm_last_touch),
sent=sum(dm_last_touch))
View(df)
nrow(names)
df <- dplyr::left_join(names, fixes, by="client_id")
nrow(df)
nrow(sent_dm)
df <- dplyr::left_join(names, fixes, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
replace(is.na(.), 0) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup*dm_last_touch),
ff=sum(shipment_request*dm_last_touch),
sent=sum(dm_last_touch))
View(df)
df <- dplyr::inner_join(fixes, names, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup*dm_last_touch),
ff=sum(shipment_request*dm_last_touch),
sent=sum(dm_last_touch))
View(df)
df <- dplyr::inner_join(fixes, names, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request),
sent=sum(dm_last_touch))
View(df)
df <- dplyr::inner_join(fixes, names, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
replace(is.na(.),0) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request),
sent=sum(dm_last_touch))
View(df)
t <- dplyr::inner_join(fixes, names, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
summarise(n=n())
t
nrow(sent_dm)
sum(df$ff)/nrow(sent_dm)
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
df <- dplyr::inner_join(fixes, names, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
mutate(calendar_month=ifelse(is.na(calendar_month), as.Date("2016-01-01"), calendar_month)) %>%
replace(is.na(.),0) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request),
sent=sum(dm_last_touch))
df <- dplyr::left_join(names, fixes, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
mutate(calendar_month=ifelse(is.na(calendar_month), as.Date("2016-01-01"), calendar_month)) %>%
replace(is.na(.),0) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request),
sent=sum(dm_last_touch))
View(df)
df <- dplyr::inner_join(names, fixes, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request),
sent=sum(dm_last_touch))
sum(df$ff)/nrow(sent_dm)
View(df)
View(df)
library(data.table)
library(Information)
library(devtools)
library(RCurl)
library(jsonlite)
library(DBI)
library(dplyr)
library(chance)
library(RPostgres)
library(zipcode)
library(RCurl)
dm1 <- data.frame(fread("/Users/kimlarsen/Documents/DM/third mailer/56882_Stitch Fix Self Mailer - 3rd Drop_ ORIGINAL VERSION.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=1, wave_name="56882_Stitch Fix Self Mailer - 3rd Drop_ ORIGINAL VERSION")
dm2 <- data.frame(fread("/Users/kimlarsen/Documents/DM/third mailer/56882_Stitch Fix Self Mailer - 3rd Drop_ PLATED VERSION.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=2, wave_name="56882_Stitch Fix Self Mailer - 3rd Drop_ PLATED VERSION")
dm3 <- data.frame(fread("/Users/kimlarsen/Documents/DM/55071_Stitch Fix Self Mailers_Drop 1_ORIG_VER.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=3, wave_name="55071_Stitch Fix Self Mailers_Drop 1_ORIG_VER")
dm4 <- data.frame(fread("/Users/kimlarsen/Documents/DM/55071_Stitch Fix Self Mailers_Drop 1_PLATED_VER.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=4, wave_name="55071_Stitch Fix Self Mailers_Drop 1_PLATED_VER")
dm5 <- data.frame(fread("/Users/kimlarsen/Documents/DM/56649_Stitch Fix Self Mailer - 2nd Drop.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=5, wave_name="56649_Stitch Fix Self Mailer - 2nd Drop")
dm6 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/NEEDS_DE_DUP_MBI_PO#260008A_StitchFix_082916_dedup_FINAL.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=6, wave_name="NEEDS_DE_DUP_MBI_PO#260008A_StitchFix_082916")
dm7 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/MBI_PO#260009A_StitchFix_091316_dedup.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=7, wave_name="MBI_PO#260009A_StitchFix_091316")
dm8 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/MBI_PO#260008AR1_StitchFix_090716_dedup.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=8, wave_name="MBI_PO#260009A_StitchFix_090716")
sent_dm <- bind_rows(dm1, dm2, dm3, dm4, dm5, dm6, dm7, dm8) %>%
mutate(zipcode_clean=substr(clean.zipcodes(ZIP10), 1, 5)) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
mutate(dm_last_touch=1)
nrow(sent_dm)
qry1 = "
with signups as (
select client_id,
convert_timezone('pdt8pst',signup_at) :: date as signup_date,
age,
1 as signup,
shipping_postcode as zipcode
from client
where shipping_postcode is not null and convert_timezone('pdt8pst',signup_at) :: date > '2016-07-28'
),
requests as (
select distinct client_id,
1 as shipment_request
from shipment_requests
where convert_timezone('pdt8pst',created_at) :: date > '2016-07-28'
),
shipments as (
select client_id,
items_sold,
1 as shipment,
created_with_autoship_flag,
order_value
from shipment where fix_number=1 and processed_ts:: date > '2016-07-28' and processed_ts is not NULL
),
source as (
select client_id,
last_touch,
last_touch_category
from shipment_source
where fix_no=1
),
ss as (
select client_id, last_touch as signup_last_touch
from signup_source_recent
)
select a.client_id, zipcode, a.age as age,
d.last_touch_category, d.last_touch, e.signup_last_touch,
coalesce(items_sold, 0) as items_sold,
coalesce(order_value, 0) as order_value,
coalesce(shipment_request, 0) as shipment_request,
coalesce(shipment, 0) as shipment,
coalesce(signup, 0) as signup,
coalesce(created_with_autoship_flag, 0) as created_with_autoship_flag,
date_trunc('month', a.signup_date) :: date as calendar_month
from signups as a
left join requests b on a.client_id=b.client_id
left join shipments c on a.client_id=c.client_id
left join source as d on a.client_id=d.client_id
left join ss as e on a.client_id=e.client_id
"
fixes <- sf_connect('redshift') %>% sf_query(qry1) %>%
filter(zipcode != '' & is.na(zipcode)==F & is.null(zipcode)==F & zipcode != '*****')
fixes$zipcode_clean = substr(clean.zipcodes(fixes$zipcode), 1, 5)
### Get names and addrresses
heroku_name <- 'transmetropolitan-production.AA_ADHOC_FOLLOWER_DATABASE_URL'
token_server_url <- 'http://token-server.vertigo.stitchfix.com/cred/'
url <- paste0(token_server_url, heroku_name)
credentials <- RCurl::getURL(url, curl=RCurl::getCurlHandle()) %>%
jsonlite::fromJSON()
con <- dbConnect(RPostgres::Postgres(),
dbname = credentials$name,
host = credentials$host,
port = credentials$port,
user = credentials$username,
password = credentials$password,
sslmode = 'require')
qry2 <- "SELECT upper(a.first_name) as FIRST_NAME, upper(a.last_name) as LAST_NAME, b.id as client_id
FROM auth_user a
inner join core_client b on a.id=b.user_ptr_id
where b.create_date :: date > '2016-07-28'"
res <- dbSendQuery(con, qry2)
names <- dbFetch(res)
dbClearResult(res)
dbDisconnect(con)
df <- dplyr::inner_join(names, fixes, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
filter(dm_last_touch==1) %>%
group_by(calendar_month) %>%
summarise(signups=sum(signup),
ff=sum(shipment_request))
sum(df$ff)/nrow(sent_dm)
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
View(df)
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
sum(df$ff)/nrow(sent_dm)
library(xlsx)
library(dplyr)
library(readxl)
library(stringi)
library(tidyr)
library(reshape2)
library(data.table)
library(dplyr)
library(ggmap)
library(parallel)
library(foreach)
library(doParallel)
library(rvest)
library(stringr)
source("/Users/kimlarsen/Documents/Code/NBA_RANKINGS/functions/distance_between.R")
setwd("/Users/kimlarsen/Documents/Code/NBA_RANKINGS/rawdata/")
team_map <- data.frame(read_excel("schedule.xlsx", sheet=2)) %>%
distinct(Team, .keep_all=TRUE) %>% select(City, NBAstuffer.Initials, Team) %>%
filter(!(Team %in% c("Charlotte Bobcats", "New Orleans Hornets")))
### 538 data
ft8 <- read_html("http://projects.fivethirtyeight.com/2017-nba-predictions/")
team <- ft8 %>% html_nodes("tbody tr td.team a") %>% html_text() %>% gsub("[0-9, -]", "", .)
wins <- ft8 %>% html_nodes("tbody tr td.proj-rec") %>% html_text() %>% gsub('-[0-9]+','', .)
losses <- ft8 %>% html_nodes("tbody tr td.proj-rec") %>% html_text() %>% gsub('[0-9]+-','', .)
elo <- ft8 %>% html_nodes("tbody tr td.elo.original") %>% html_text()
carm_elo <- ft8 %>% html_nodes("tbody tr td.carmelo") %>% html_text()
team[team=="ers"] <- "Philadelphia"
team[team=="Hornets"] <- "Charlotte"
team[team=="Clippers"] <- "LA Clippers"
team[team=="Cavaliers"] <- "Cleveland"
team[team=="Warriors"] <- "Golden State"
team[team=="Spurs"] <- "San Antonio"
team[team=="Raptors"] <- "Toronto"
team[team=="Jazz"] <- "Utah"
team[team=="Thunder"] <- "Oklahoma City"
team[team=="TrailBlazers"] <- "Portland"
team[team=="Rockets"] <- "Houston"
team[team=="Pelicans"] <- "New Orleans"
team[team=="Celtics"] <- "Boston"
team[team=="Timberwolves"] <- "Minnesota"
team[team=="Bulls"] <- "Chicago"
team[team=="Hawks"] <- "Atlanta"
team[team=="Pistons"] <- "Detroit"
team[team=="Nuggets"] <- "Denver"
team[team=="Mavericks"] <- "Dallas"
team[team=="Wizards"] <- "Washington"
team[team=="Lakers"] <- "LA Lakers"
team[team=="Kings"] <- "Sacramento"
team[team=="Knicks"] <- "New York"
team[team=="Grizzlies"] <- "Memphis"
team[team=="Pacers"] <- "Indiana"
team[team=="Bucks"] <- "Milwaukee"
team[team=="Magic"] <- "Orlando"
team[team=="Heat"] <- "Miami"
team[team=="Suns"] <- "Phoenix"
team[team=="Nets"] <- "Brooklyn"
fivethirtyeight <- data.frame(team, elo=as.numeric(elo),
carm_elo=as.numeric(carm_elo),
wins_538=as.numeric(wins),
losses_538=as.numeric(losses),
stringsAsFactors = FALSE) %>%
mutate(selected_team=as.character(team), opposing_team=as.character(team),
elo=elo, carm_elo=carm_elo,
pred_win_rate_538=wins_538/(wins_538+losses_538)) %>%
select(-team)
### Injury return dates from CBS
cbs_injuries <- read_html("http://www.cbssports.com/nba/injuries/daily")
PLAYER_FULL_NAME <- cbs_injuries %>% html_nodes("tr.row1 td:nth-child(3), tr.row2 td:nth-child(3)") %>% html_text()
return_notes <- cbs_injuries %>% html_nodes("tr.row1 td:nth-child(6), tr.row2 td:nth-child(6)") %>% html_text()
daily_injuries <- data.frame(PLAYER_FULL_NAME,
return_notes,
stringsAsFactors = FALSE) %>%
mutate(clean_note=gsub("Expected to be out until at least ", "", return_notes))
convert_to_date <- function(data){
if (data$clean_note=="Game Time Decision"){
data$return_date <- Sys.Date() + 1
} else if (data$clean_note=="Out for the season"){
data$return_date <- as.Date("2017-10-25")
} else{
data$return_date <- as.Date(data$clean_note, format="%b %d")
}
if (data$return_date<Sys.Date()){
data$return_date <- data$return_date + 365
}
return(data)
}
daily_injuries <- data.frame(rbindlist(lapply(split(daily_injuries, daily_injuries$PLAYER_FULL_NAME), convert_to_date)), stringsAsFactors = FALSE) %>%
select(PLAYER_FULL_NAME, return_date) %>% distinct(PLAYER_FULL_NAME, .keep_all=TRUE)
### Injury status from ESPN
source_injuries <- read_html("http://espn.go.com/nba/injuries")
players <- source_injuries %>%
html_nodes('table tr.oddrow a, table tr.evenrow a') %>%
html_text()
statuses <- source_injuries %>%
html_nodes('table tr.oddrow td:nth-child(2), table tr.evenrow  td:nth-child(2)') %>%
html_text()
dates <- source_injuries %>%
html_nodes('table tr.oddrow td:nth-child(3), table tr.evenrow  td:nth-child(3)') %>%
html_text()
injuries <- data.frame(
PLAYER_FULL_NAME = players,
injury_status = statuses,
injury_date = dates,
stringsAsFactors = FALSE
) %>% arrange(PLAYER_FULL_NAME, desc(injury_date)) %>%
distinct(PLAYER_FULL_NAME, .keep_all=TRUE) %>%
left_join(daily_injuries, by="PLAYER_FULL_NAME") %>%
distinct(PLAYER_FULL_NAME, .keep_all=TRUE) %>%
mutate(injury_scrape_date=Sys.Date())
injuries[is.na(injuries$return_date),"return_date"] <- Sys.Date()+1
### Get the current rosters
team_pages <- read_html("http://www.espn.com/nba/teams") %>%
html_nodes("ul.medium-logos span a:nth-child(3)") %>% html_attr("href")
rosters <- lapply(team_pages, function (team_link) {
team_link <- paste0('http://www.espn.com', team_link)
team_roster <- read_html(team_link)
team_name <- team_roster %>% html_nodes("h2.logo b") %>% html_text()
team_name[team_name=="LA Clippers"] <- "Los Angeles Clippers"
team_name[team_name=="Portland Trail Blazers"] <- "Portland Trailblazers"
data <- sapply(1:8, function(col) {
team_roster %>% html_nodes(paste0("tr.evenrow > td:nth-child(",col,"), tr.oddrow > td:nth-child(",col,")")) %>% html_text()
})
data <- data.frame(data, stringsAsFactors = FALSE)
colnames(data) <- c('Number','PLAYER_FULL_NAME','Position','Age','Height','Weight','College','Salary')
data$Team <- team_name
data$Age <- as.numeric(data$Age)
data$Weight <- as.numeric(data$Weight)
data$Salary <- as.numeric(gsub(',','',gsub('\\$', '', data$Salary)))
data
})
all_rosters <- bind_rows(lapply(rosters, function(x) as.data.frame(x))) %>%
left_join(team_map, by="Team") %>%
rename(OWN_TEAM=City) %>%
select(PLAYER_FULL_NAME, OWN_TEAM, Position, Age, Height, Weight, Salary, Team) %>%
arrange(PLAYER_FULL_NAME, OWN_TEAM) %>%
left_join(injuries, by="PLAYER_FULL_NAME") %>%
distinct(PLAYER_FULL_NAME, .keep_all=TRUE)
## Save scraped data
write.csv(all_rosters, "rosters_current.csv", row.names = FALSE)
write.csv(all_rosters, paste0("rosters_", Sys.Date(), ".csv"), row.names = FALSE)
write.csv(fivethirtyeight, paste0("FiveThirtyEight_", Sys.Date(), ".csv"), row.names = FALSE)
write.csv(fivethirtyeight, paste0("FiveThirtyEight_current.csv"), row.names = FALSE)
write.csv(injuries, paste0("injuries_", Sys.Date(), ".csv"), row.names = FALSE)
write.csv(injuries, "injuries_current.csv", row.names = FALSE)
View(injuries)
library(data.table)
library(Information)
library(devtools)
library(RCurl)
library(jsonlite)
library(DBI)
library(dplyr)
library(chance)
library(RPostgres)
library(zipcode)
library(RCurl)
dm1 <- data.frame(fread("/Users/kimlarsen/Documents/DM/third mailer/56882_Stitch Fix Self Mailer - 3rd Drop_ ORIGINAL VERSION.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=1, wave_name="56882_Stitch Fix Self Mailer - 3rd Drop_ ORIGINAL VERSION")
dm2 <- data.frame(fread("/Users/kimlarsen/Documents/DM/third mailer/56882_Stitch Fix Self Mailer - 3rd Drop_ PLATED VERSION.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=2, wave_name="56882_Stitch Fix Self Mailer - 3rd Drop_ PLATED VERSION")
dm3 <- data.frame(fread("/Users/kimlarsen/Documents/DM/55071_Stitch Fix Self Mailers_Drop 1_ORIG_VER.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=3, wave_name="55071_Stitch Fix Self Mailers_Drop 1_ORIG_VER")
dm4 <- data.frame(fread("/Users/kimlarsen/Documents/DM/55071_Stitch Fix Self Mailers_Drop 1_PLATED_VER.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=4, wave_name="55071_Stitch Fix Self Mailers_Drop 1_PLATED_VER")
dm5 <- data.frame(fread("/Users/kimlarsen/Documents/DM/56649_Stitch Fix Self Mailer - 2nd Drop.csv")) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME) %>%
mutate(wave=5, wave_name="56649_Stitch Fix Self Mailer - 2nd Drop")
dm6 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/NEEDS_DE_DUP_MBI_PO#260008A_StitchFix_082916_dedup_FINAL.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=6, wave_name="NEEDS_DE_DUP_MBI_PO#260008A_StitchFix_082916")
dm7 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/MBI_PO#260009A_StitchFix_091316_dedup.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=7, wave_name="MBI_PO#260009A_StitchFix_091316")
dm8 <- data.frame(fread("/Users/kimlarsen/Documents/DM/dedup/MBI_PO#260008AR1_StitchFix_090716_dedup.csv")) %>%
dplyr::mutate(ZIP10=as.character(ZIP5)) %>%
dplyr::select(FIRST_NAME, LAST_NAME, ZIP10) %>%
dplyr::rename(first_name=FIRST_NAME, last_name=LAST_NAME)  %>%
mutate(wave=8, wave_name="MBI_PO#260009A_StitchFix_090716")
sent_dm <- bind_rows(dm1, dm2, dm3, dm4, dm5, dm6, dm7, dm8) %>%
mutate(zipcode_clean=substr(clean.zipcodes(ZIP10), 1, 5)) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
mutate(dm_last_touch=1)
nrow(sent_dm)
qry1 = "
with signups as (
select client_id,
convert_timezone('pdt8pst',signup_at) :: date as signup_date,
age,
1 as signup,
shipping_postcode as zipcode
from client
where shipping_postcode is not null and convert_timezone('pdt8pst',signup_at) :: date > '2016-07-28'
),
requests as (
select client_id,
1 as shipment_request,
min(convert_timezone('pdt8pst',created_at) :: date) as request_date
from shipment_requests
where convert_timezone('pdt8pst',created_at) :: date > '2016-07-28'
group by client_id
),
shipments as (
select client_id,
items_sold,
1 as shipment,
created_with_autoship_flag,
order_value
from shipment where fix_number=1 and processed_ts:: date > '2016-07-28' and processed_ts is not NULL
),
source as (
select client_id,
last_touch,
last_touch_category
from shipment_source
where fix_no=1
),
ss as (
select client_id, last_touch as signup_last_touch
from signup_source_recent
)
select a.client_id, zipcode, a.age as age,
d.last_touch_category, d.last_touch, e.signup_last_touch,
coalesce(items_sold, 0) as items_sold,
coalesce(order_value, 0) as order_value,
coalesce(shipment_request, 0) as shipment_request,
coalesce(shipment, 0) as shipment,
coalesce(signup, 0) as signup,
coalesce(created_with_autoship_flag, 0) as created_with_autoship_flag,
date_trunc('month', a.signup_date) :: date as calendar_month,
a.signup_date,
b.request_date
from signups as a
left join requests b on a.client_id=b.client_id
left join shipments c on a.client_id=c.client_id
left join source as d on a.client_id=d.client_id
left join ss as e on a.client_id=e.client_id
"
fixes <- sf_connect('redshift') %>% sf_query(qry1) %>%
filter(zipcode != '' & is.na(zipcode)==F & is.null(zipcode)==F & zipcode != '*****')
fixes$zipcode_clean = substr(clean.zipcodes(fixes$zipcode), 1, 5)
### Get names and addrresses
heroku_name <- 'transmetropolitan-production.AA_ADHOC_FOLLOWER_DATABASE_URL'
token_server_url <- 'http://token-server.vertigo.stitchfix.com/cred/'
url <- paste0(token_server_url, heroku_name)
credentials <- RCurl::getURL(url, curl=RCurl::getCurlHandle()) %>%
jsonlite::fromJSON()
con <- dbConnect(RPostgres::Postgres(),
dbname = credentials$name,
host = credentials$host,
port = credentials$port,
user = credentials$username,
password = credentials$password,
sslmode = 'require')
qry2 <- "SELECT upper(a.first_name) as FIRST_NAME, upper(a.last_name) as LAST_NAME, b.id as client_id
FROM auth_user a
inner join core_client b on a.id=b.user_ptr_id
where b.create_date :: date > '2016-07-28'"
res <- dbSendQuery(con, qry2)
names <- dbFetch(res)
dbClearResult(res)
dbDisconnect(con)
df <- dplyr::inner_join(names, fixes, by="client_id") %>%
dplyr::distinct(client_id, .keep_all=TRUE) %>%
dplyr::inner_join(sent_dm, by=c("first_name", "last_name", "zipcode_clean")) %>%
dplyr::distinct(first_name, last_name, zipcode_clean, .keep_all = TRUE) %>%
filter(dm_last_touch==1) %>%
select(client_id, wave_name, signup_date, request_date, shipment_request)
View(df)
rite.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
sum(df$shipment_request)/nrow(sent_dm)
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
write.csv(df, "/Users/kimlarsen/Documents/DM/dm_attribution_by_month.csv")
