r[i] <- ftr*alpha^(i-1)
}
return(r)
}
get_convesion_curve(0.9, 1, 0.009248782)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
ggplot(aes(x=signup_week, y=total_trips), data=ft) + geom_line() + scale_y_continuous(labels = scales::comma)
ggplot(data=surv) + geom_line(aes(y=S, x=T, colour="Forecast")) +
geom_line(aes(y=aS, x=T, colour="Actual"))
hist_ft <- ft$first_trips_actual
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
### function to create cohorts
create_cohort <- function(id, window, acquisition_rate, survival, m_trips=1){
zeros <- rep(0, id-1)
maxt <- min(max(survival$T), window)
s <- subset(surv, T<=maxt-id)
stats <- data.frame(id, acquisition_rate, t(c(zeros, t(s$S), zeros, t(s$Trips)*m_trips)))
names(stats) <- c("Cohort", "Size", paste0("s", seq_along(1:window)), paste0("trips", seq_along(1:window)))
return(stats)
}
combine_cohorts <- function(historical_acquisition, future_acquisition, survival, window){
cohorts <- list()
for (i in 1:(window-1)){
if (i<=length(historical_acquisition)){
a <- historical_acquisition[i]
} else{
a <- future_acquisition
}
cohorts[[i]] <- create_cohort(i, window, a, survival)
}
return(data.frame(rbindlist(cohorts)))
}
df <- combine_cohorts(hist_ft, as.numeric(future_ft$first_trips_actual), surv, window)
m_acquisition <- rep(1, window)
m_survival <- rep(1, window)
calculate_supply <- function(df, window){
size <- df$Size
df$Size <- NULL
S <- as.matrix(select(df, starts_with("s")))
H <- as.matrix(select(df, starts_with("trips")))
R <- data.frame(Trips=colSums(S*H*size), Drivers=colSums(S*size)) %>%
mutate(T=row_number())
return(R)
}
f <- calculate_supply(df, window) %>%
left_join(ft, by="T")
ggplot(data=f, aes(x=T, y=Trips)) + geom_line() + xlab("Time") + ylab("Trips") +
scale_y_continuous(labels = scales::comma)
View(f)
library(cranlogs)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-07-16"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
library(cranlogs)
library(tidyr)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-07-16"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
library(cranlogs)
library(tidyr)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-07-14"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
library(cranlogs)
library(tidyverse)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-07-14"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
sum(cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-07-14"),
packages = "Information")$count)
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
get_convesion_curve <- function(alpha, w0, ftr, length=26){
r <- rep(ftr*w0, length)
for (i in 2:length){
r[i] <- ftr*alpha^(i-1)
}
return(r)
}
get_convesion_curve(0.9, 1, 0.009248782)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
ggplot(aes(x=signup_week, y=total_trips), data=ft) + geom_line() + scale_y_continuous(labels = scales::comma)
ggplot(data=surv) + geom_line(aes(y=S, x=T, colour="Forecast")) +
geom_line(aes(y=aS, x=T, colour="Actual"))
hist_ft <- ft$first_trips_actual
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
### function to create cohorts
create_cohort <- function(id, window, acquisition_rate, survival, m_trips=1){
zeros <- rep(0, id-1)
maxt <- min(max(survival$T), window)
s <- subset(surv, T<=maxt-id)
stats <- data.frame(id, acquisition_rate, t(c(zeros, t(s$S), zeros, t(s$Trips)*m_trips)))
names(stats) <- c("Cohort", "Size", paste0("s", seq_along(1:window)), paste0("trips", seq_along(1:window)))
return(stats)
}
combine_cohorts <- function(historical_acquisition, future_acquisition, survival, window){
cohorts <- list()
for (i in 1:(window-1)){
if (i<=length(historical_acquisition)){
a <- historical_acquisition[i]
} else{
a <- future_acquisition
}
cohorts[[i]] <- create_cohort(i, window, a, survival)
}
return(data.frame(rbindlist(cohorts)))
}
df <- combine_cohorts(hist_ft, as.numeric(future_ft$first_trips_actual), surv, window)
m_acquisition <- rep(1, window)
m_survival <- rep(1, window)
calculate_supply <- function(df, window){
size <- df$Size
df$Size <- NULL
S <- as.matrix(select(df, starts_with("s")))
H <- as.matrix(select(df, starts_with("trips")))
R <- data.frame(Trips=colSums(S*H*size), Drivers=colSums(S*size)) %>%
mutate(T=row_number())
return(R)
}
f <- calculate_supply(df, window) %>%
left_join(ft, by="T")
ggplot(data=f, aes(x=T, y=Trips)) + geom_line() + xlab("Time") + ylab("Trips") +
scale_y_continuous(labels = scales::comma)
View(df)
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
View(surv)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
View(tf)
View(ft)
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
get_convesion_curve <- function(alpha, w0, ftr, length=26){
r <- rep(ftr*w0, length)
for (i in 2:length){
r[i] <- ftr*alpha^(i-1)
}
return(r)
}
get_convesion_curve(0.9, 1, 0.009248782)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
ggplot(aes(x=signup_week, y=total_trips), data=ft) + geom_line() + scale_y_continuous(labels = scales::comma)
ggplot(data=surv) + geom_line(aes(y=S, x=T, colour="Forecast")) +
geom_line(aes(y=aS, x=T, colour="Actual"))
hist_ft <- ft$first_trips_actual
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
future_ft <- 0
### function to create cohorts
create_cohort <- function(id, window, acquisition_rate, survival, m_trips=1){
zeros <- rep(0, id-1)
maxt <- min(max(survival$T), window)
s <- subset(surv, T<=maxt-id)
stats <- data.frame(id, acquisition_rate, t(c(zeros, t(s$S), zeros, t(s$Trips)*m_trips)))
names(stats) <- c("Cohort", "Size", paste0("s", seq_along(1:window)), paste0("trips", seq_along(1:window)))
return(stats)
}
combine_cohorts <- function(historical_acquisition, future_acquisition, survival, window){
cohorts <- list()
for (i in 1:(window-1)){
if (i<=length(historical_acquisition)){
a <- historical_acquisition[i]
} else{
a <- future_acquisition
}
cohorts[[i]] <- create_cohort(i, window, a, survival)
}
return(data.frame(rbindlist(cohorts)))
}
df <- combine_cohorts(hist_ft, as.numeric(future_ft$first_trips_actual), surv, window)
m_acquisition <- rep(1, window)
m_survival <- rep(1, window)
calculate_supply <- function(df, window){
size <- df$Size
df$Size <- NULL
S <- as.matrix(select(df, starts_with("s")))
H <- as.matrix(select(df, starts_with("trips")))
R <- data.frame(Trips=colSums(S*H*size), Drivers=colSums(S*size)) %>%
mutate(T=row_number())
return(R)
}
f <- calculate_supply(df, window) %>%
left_join(ft, by="T")
ggplot(data=f, aes(x=T, y=Trips)) + geom_line() + xlab("Time") + ylab("Trips") +
scale_y_continuous(labels = scales::comma)
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
get_convesion_curve <- function(alpha, w0, ftr, length=26){
r <- rep(ftr*w0, length)
for (i in 2:length){
r[i] <- ftr*alpha^(i-1)
}
return(r)
}
get_convesion_curve(0.9, 1, 0.009248782)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
ggplot(aes(x=signup_week, y=total_trips), data=ft) + geom_line() + scale_y_continuous(labels = scales::comma)
ggplot(data=surv) + geom_line(aes(y=S, x=T, colour="Forecast")) +
geom_line(aes(y=aS, x=T, colour="Actual"))
hist_ft <- ft$first_trips_actual
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
future_ft$first_trips_actual <- 0
### function to create cohorts
create_cohort <- function(id, window, acquisition_rate, survival, m_trips=1){
zeros <- rep(0, id-1)
maxt <- min(max(survival$T), window)
s <- subset(surv, T<=maxt-id)
stats <- data.frame(id, acquisition_rate, t(c(zeros, t(s$S), zeros, t(s$Trips)*m_trips)))
names(stats) <- c("Cohort", "Size", paste0("s", seq_along(1:window)), paste0("trips", seq_along(1:window)))
return(stats)
}
combine_cohorts <- function(historical_acquisition, future_acquisition, survival, window){
cohorts <- list()
for (i in 1:(window-1)){
if (i<=length(historical_acquisition)){
a <- historical_acquisition[i]
} else{
a <- future_acquisition
}
cohorts[[i]] <- create_cohort(i, window, a, survival)
}
return(data.frame(rbindlist(cohorts)))
}
df <- combine_cohorts(hist_ft, as.numeric(future_ft$first_trips_actual), surv, window)
m_acquisition <- rep(1, window)
m_survival <- rep(1, window)
calculate_supply <- function(df, window){
size <- df$Size
df$Size <- NULL
S <- as.matrix(select(df, starts_with("s")))
H <- as.matrix(select(df, starts_with("trips")))
R <- data.frame(Trips=colSums(S*H*size), Drivers=colSums(S*size)) %>%
mutate(T=row_number())
return(R)
}
f <- calculate_supply(df, window) %>%
left_join(ft, by="T")
ggplot(data=f, aes(x=T, y=Trips)) + geom_line() + xlab("Time") + ylab("Trips") +
scale_y_continuous(labels = scales::comma)
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
get_convesion_curve <- function(alpha, w0, ftr, length=26){
r <- rep(ftr*w0, length)
for (i in 2:length){
r[i] <- ftr*alpha^(i-1)
}
return(r)
}
get_convesion_curve(0.9, 1, 0.009248782)
ft <- read_excel("/Users/kim.larsen/Documents/Projects/Cohort Simulator/ft_history.xlsx", sheet=1) %>%
arrange(signup_week) %>%
mutate(T=row_number())
ggplot(aes(x=signup_week, y=total_trips), data=ft) + geom_line() + scale_y_continuous(labels = scales::comma)
ggplot(data=surv) + geom_line(aes(y=S, x=T, colour="Forecast")) +
geom_line(aes(y=aS, x=T, colour="Actual"))
hist_ft <- ft$first_trips_actual
future_ft <- filter(ft, year(signup_week)>2016) %>%
summarise(first_trips_actual=mean(first_trips_actual))
future_ft$first_trips_actual <- 5000
### function to create cohorts
create_cohort <- function(id, window, acquisition_rate, survival, m_trips=1){
zeros <- rep(0, id-1)
maxt <- min(max(survival$T), window)
s <- subset(surv, T<=maxt-id)
stats <- data.frame(id, acquisition_rate, t(c(zeros, t(s$S), zeros, t(s$Trips)*m_trips)))
names(stats) <- c("Cohort", "Size", paste0("s", seq_along(1:window)), paste0("trips", seq_along(1:window)))
return(stats)
}
combine_cohorts <- function(historical_acquisition, future_acquisition, survival, window){
cohorts <- list()
for (i in 1:(window-1)){
if (i<=length(historical_acquisition)){
a <- historical_acquisition[i]
} else{
a <- future_acquisition
}
cohorts[[i]] <- create_cohort(i, window, a, survival)
}
return(data.frame(rbindlist(cohorts)))
}
df <- combine_cohorts(hist_ft, as.numeric(future_ft$first_trips_actual), surv, window)
m_acquisition <- rep(1, window)
m_survival <- rep(1, window)
calculate_supply <- function(df, window){
size <- df$Size
df$Size <- NULL
S <- as.matrix(select(df, starts_with("s")))
H <- as.matrix(select(df, starts_with("trips")))
R <- data.frame(Trips=colSums(S*H*size), Drivers=colSums(S*size)) %>%
mutate(T=row_number())
return(R)
}
f <- calculate_supply(df, window) %>%
left_join(ft, by="T")
ggplot(data=f, aes(x=T, y=Trips)) + geom_line() + xlab("Time") + ylab("Trips") +
scale_y_continuous(labels = scales::comma)
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
View(surv)
write_excel(surv, "/Users/kim.larsen/Documents/Projects/Cohort Simulator/pred_survival.xlsx")
library(survival)
library(readxl)
library(flexsurv)
library(data.table)
library(tidyverse)
### Global settings:
window <- 500
get_survival_curve <- function(file, cutoff=2){
d1 <- read_excel(file, sheet=1) %>%
filter(trip_week >= 0 & trip_week<=52 & year(first_trip_week)<2017) %>%
group_by(trip_week) %>%
summarise(S=weighted.mean(retention, drivers),
Trips=weighted.mean(engagement, drivers)) %>%
rename(T=trip_week) %>%
mutate(aS=S) %>%
select(T, Trips, S, aS)
d2 <- data.frame(T=max(d1$T)+seq(1:(500-max(d1$T))), S=NA, aS=NA, Trips=d1[nrow(d1), "Trips"])
d3 <- bind_rows(d1, d2)
m <- lm(log(S) ~ log(T), subset(d1, T>cutoff))
d4 <- data.frame(pS=exp(predict(m, data.frame(T=cutoff+seq(1:1000)))), T=cutoff+seq(1:1000))
d5 <- left_join(d3, d4, by="T") %>%
mutate(S=ifelse(is.na(pS), S, pS))
return(d5)
}
surv <- get_survival_curve("/Users/kim.larsen/Documents/Projects/Cohort Simulator/cohort_survival.xlsx")
write_excel(surv, "/Users/kim.larsen/Documents/Projects/Cohort Simulator/pred_survival.xlsx")
View(surv)
write.csv(surv, "/Users/kim.larsen/Documents/Projects/Cohort Simulator/pred_survival.xlsx")
write.csv(surv, "/Users/kim.larsen/Documents/Projects/Cohort Simulator/pred_survival.csv")
library(cranlogs)
library(tidyverse)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-09-01"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
library(cranlogs)
library(tidyverse)
cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-09-12"),
packages = "Information") %>%
ggplot(aes(x=date, y=count)) + geom_line()
sum(cranlogs::cran_downloads(from=as.Date("2015-01-01"), to=as.Date("2017-09-12"),
packages = "Information")$count)
library(xlsx)
library(dplyr)
library(readxl)
library(stringi)
library(tidyr)
library(data.table)
library(dplyr)
library(ggmap)
library(parallel)
library(foreach)
library(doParallel)
library(rvest)
library(stringr)
source("/Users/kim.larsen/Documents/Code/NBA_RANKINGS/functions/distance_between.R")
setwd("/Users/kim.larsen/Documents/Code/NBA_RANKINGS/rawdata/")
team_map <- data.frame(read_excel("schedule.xlsx", sheet=2)) %>%
distinct(Team, .keep_all=TRUE) %>% select(City, NBAstuffer.Initials, Team) %>%
filter(!(Team %in% c("Charlotte Bobcats", "New Orleans Hornets")))
